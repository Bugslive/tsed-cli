import {applyDecorators, StoreSet} from "@tsed/core";
import {Middleware, Req, Res, Context} from "@tsed/common";

export interface I{{symbolName}}Options {

}

@Middleware()
export class {{symbolName}}Middleware {
  use(@Req() req: Req, @Res() res: Res, @Context() context: Context) {
    const {}: I{{symbolName}}Options = context.endpoint.get({{symbolName}}Middleware);{{#eq middlewareType "after"}}
    const data = context.data;
    // do something with data and return data
    return data{{/eq}}
  }
}

export function {{symbolName}}(options: I{{symbolName}}Options): MethodDecorator {
  return applyDecorators(
    StoreSet({{symbolName}}Middleware, options),
    {{#eq middlewareType "before"}}UseBefore(){{/eq}}{{#eq middlewareType "after"}}UseAfter({{symbolName}}Middleware){{/eq}}
  );
}
